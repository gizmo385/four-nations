["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$four-nations.model.map.biomes","~:imports",null,"~:requires",["^ ","~$utils","~$four-nations.general.utils","^:","^:","~$four-nations.general.types","^;","~$map-utils","~$four-nations.model.map.utils","^=","^="],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$->Point","^;"],"~:defs",["^ ","~$select-random-points",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/gizmo/workspace/four-nations/src/four_nations/model/map/biomes.cljs","~:line",15,"~:column",7,"~:end-line",15,"~:end-column",27,"~:arglists",["~#list",["~$quote",["^K",[["~$dimensions","~$points-to-generate"]]]]],"~:doc","Generates the specified number of points within the given dimensions."],"^5","~$four-nations.model.map.biomes/select-random-points","^E","src/four_nations/model/map/biomes.cljs","^I",27,"~:method-params",["^K",[["^M","^N"]]],"~:protocol-impl",null,"~:arglists-meta",["^K",[null,null]],"^G",1,"~:variadic?",false,"^F",15,"~:ret-tag","~$cljs.core/LazySeq","^H",15,"~:max-fixed-arity",2,"~:fn-var",true,"^J",["^K",["^L",["^K",[["^M","^N"]]]]],"^O","Generates the specified number of points within the given dimensions."],"~$fully-grouped?",["^ ","^C",null,"^D",["^ ","^E","/home/gizmo/workspace/four-nations/src/four_nations/model/map/biomes.cljs","^F",20,"^G",7,"^H",20,"^I",21,"^J",["^K",["^L",["^K",[["~$m"]]]]],"^O","Given a map m, determines if the tiles in that map have been fully-grouped by a group ID."],"^5","~$four-nations.model.map.biomes/fully-grouped?","^E","src/four_nations/model/map/biomes.cljs","^I",21,"^Q",["^K",[["~$m"]]],"^R",null,"^S",["^K",[null,null]],"^G",1,"^T",false,"^F",20,"^U","~$boolean","^H",20,"^W",1,"^X",true,"^J",["^K",["^L",["^K",[["~$m"]]]]],"^O","Given a map m, determines if the tiles in that map have been fully-grouped by a group ID."],"~$group-ids->biomes",["^ ","^C",null,"^D",["^ ","^E","/home/gizmo/workspace/four-nations/src/four_nations/model/map/biomes.cljs","^F",70,"^G",7,"^H",70,"^I",24,"^J",["^K",["^L",["^K",[["~$m","^M","~$id->biome"]]]]],"^O","Replaces the group ID on each tile with the biome that group ID corresponds to."],"^5","~$four-nations.model.map.biomes/group-ids->biomes","^E","src/four_nations/model/map/biomes.cljs","^I",24,"^Q",["^K",[["~$m","^M","^11"]]],"^R",null,"^S",["^K",[null,null]],"^G",1,"^T",false,"^F",70,"^U",["^4",[null,"~$clj","~$any"]],"^H",70,"^W",3,"^X",true,"^J",["^K",["^L",["^K",[["~$m","^M","^11"]]]]],"^O","Replaces the group ID on each tile with the biome that group ID corresponds to."],"~$add-biomes",["^ ","^C",null,"^D",["^ ","^E","/home/gizmo/workspace/four-nations/src/four_nations/model/map/biomes.cljs","^F",82,"^G",7,"^H",82,"^I",17,"^J",["^K",["^L",["^K",[["~$m","^M","~$biome-count","~$biomes"]]]]],"^O","Given a map and its dimensions, divides the map and adds biomes from a defined set of available\n   biomes."],"^5","~$four-nations.model.map.biomes/add-biomes","^E","src/four_nations/model/map/biomes.cljs","^I",17,"^Q",["^K",[["~$m","^M","^16","^17"]]],"^R",null,"^S",["^K",[null,null]],"^G",1,"^T",false,"^F",82,"^U",["^4",[null,"^13","^14"]],"^H",82,"^W",4,"^X",true,"^J",["^K",["^L",["^K",[["~$m","^M","^16","^17"]]]]],"^O","Given a map and its dimensions, divides the map and adds biomes from a defined set of available\n   biomes."],"~$map->Biome",["^ ","^C",null,"^D",["^ ","^E","/home/gizmo/workspace/four-nations/src/four_nations/model/map/biomes.cljs","^I",17,"^G",12,"~:internal-ctor",true,"~:factory","~:map","^F",94,"^H",94,"^J",["^K",["^L",["^K",[["~$G__39704"]]]]],"^O","Factory function for four-nations.model.map.biomes/Biome, taking a map of keywords to field values."],"^5","~$four-nations.model.map.biomes/map->Biome","^E","src/four_nations/model/map/biomes.cljs","^I",17,"^Q",["^K",[["^1="]]],"^R",null,"^S",["^K",[null,null]],"^G",1,"^1:",true,"^T",false,"^1;","^1<","^F",94,"^U","~$four-nations.model.map.biomes/Biome","^H",94,"^W",1,"^X",true,"^J",["^K",["^L",["^K",[["^1="]]]]],"^O","Factory function for four-nations.model.map.biomes/Biome, taking a map of keywords to field values."],"~$select-group-id-from-neighbors",["^ ","^C",null,"^D",["^ ","^E","/home/gizmo/workspace/four-nations/src/four_nations/model/map/biomes.cljs","^F",25,"^G",7,"^H",25,"^I",37,"^J",["^K",["^L",["^K",[["~$tile","~$m","^M"]]]]],"^O","Given a tile from a map, randomly selects one of the group IDs from that tiles neighbors."],"^5","~$four-nations.model.map.biomes/select-group-id-from-neighbors","^E","src/four_nations/model/map/biomes.cljs","^I",37,"^Q",["^K",[["^1A","~$m","^M"]]],"^R",null,"^S",["^K",[null,null]],"^G",1,"^T",false,"^F",25,"^U",["^4",["^13","^14"]],"^H",25,"^W",3,"^X",true,"^J",["^K",["^L",["^K",[["^1A","~$m","^M"]]]]],"^O","Given a tile from a map, randomly selects one of the group IDs from that tiles neighbors."],"~$subdivide-map",["^ ","^C",null,"^D",["^ ","^E","/home/gizmo/workspace/four-nations/src/four_nations/model/map/biomes.cljs","^F",48,"^G",7,"^H",48,"^I",20,"^J",["^K",["^L",["^K",[["~$m","^M","~$subgroup-count","~$subgroup-id-count"]]]]],"^O","Given a map and its dimensions, subdivides a map into the specified number of divisions, with each\n   division ID'd from 0 to the number of subgroup IDs specified. This means you could divide the map\n   into 10 different segments and each segment would be have an ID between [0, 4]."],"^5","~$four-nations.model.map.biomes/subdivide-map","^E","src/four_nations/model/map/biomes.cljs","^I",20,"^Q",["^K",[["~$m","^M","^1D","^1E"]]],"^R",null,"^S",["^K",[null,null]],"^G",1,"^T",false,"^F",48,"^U",["^4",["^14","~$clj-nil"]],"^H",48,"^W",4,"^X",true,"^J",["^K",["^L",["^K",[["~$m","^M","^1D","^1E"]]]]],"^O","Given a map and its dimensions, subdivides a map into the specified number of divisions, with each\n   division ID'd from 0 to the number of subgroup IDs specified. This means you could divide the map\n   into 10 different segments and each segment would be have an ID between [0, 4]."],"~$->Biome",["^ ","^C",null,"^D",["^ ","^E","/home/gizmo/workspace/four-nations/src/four_nations/model/map/biomes.cljs","^I",17,"^G",12,"^1:",true,"^1;","~:positional","^F",94,"^H",94,"^J",["^K",["^L",["^K",[["~$name"]]]]],"^O","Positional factory function for four-nations.model.map.biomes/Biome."],"^5","~$four-nations.model.map.biomes/->Biome","^E","src/four_nations/model/map/biomes.cljs","^I",17,"^Q",["^K",[["^1J"]]],"^R",null,"^S",["^K",[null,null]],"^G",1,"^1:",true,"^T",false,"^1;","^1I","^F",94,"^U","^1?","^H",94,"^W",1,"^X",true,"^J",["^K",["^L",["^K",[["^1J"]]]]],"^O","Positional factory function for four-nations.model.map.biomes/Biome."],"~$spread-groups",["^ ","^C",null,"^D",["^ ","^E","/home/gizmo/workspace/four-nations/src/four_nations/model/map/biomes.cljs","^F",36,"^G",7,"^H",36,"^I",20,"^J",["^K",["^L",["^K",[["^M","~$m"]]]]],"^O","Given map, spreads tile ids to neighbors."],"^5","~$four-nations.model.map.biomes/spread-groups","^E","src/four_nations/model/map/biomes.cljs","^I",20,"^Q",["^K",[["^M","~$m"]]],"^R",null,"^S",["^K",[null,null]],"^G",1,"^T",false,"^F",36,"^U",["^4",[null,"^13","^14"]],"^H",36,"^W",2,"^X",true,"^J",["^K",["^L",["^K",[["^M","~$m"]]]]],"^O","Given map, spreads tile ids to neighbors."],"~$Biome",["^ ","~:num-fields",1,"~:protocols",["^4",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^5","^1?","^E","src/four_nations/model/map/biomes.cljs","^I",17,"~:type",true,"^G",12,"^1:",true,"^F",94,"~:record",true,"^H",94,"~:tag","~$function","~:skip-protocol-flag",["^4",["^1Q","^1R","^1S","^1T","^1U","^1V","^1W","^1X","^1Y","^1Z","^1[","^20","^21","^22","^23"]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:biome","~:group-id","^5","^1J","~:attributes"]],"~:order",["^2?","^2>","^2=","^5","^1J"]],"^O","The idea for this is still under development. It would likely involve subdividing the game map\n   and then assigning biomes and growing those biomes.\n\n   For the actual implementation, potentially reference this StackOverflow post:\n    https://stackoverflow.com/questions/3397972/divide-grid-2d-array-into-random-shaped-parts"]