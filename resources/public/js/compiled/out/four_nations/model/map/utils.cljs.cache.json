["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$four-nations.model.map.utils","~:imports",null,"~:requires",["^ ","~$s","~$clojure.string","^9","^9","~$utils","~$four-nations.general.utils","^;","^;","~$four-nations.general.types","^<"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$->Point","^<","~$->Dimension","^<"],"~:defs",["^ ","~$terrain-type->color",["^ ","^5","~$four-nations.model.map.utils/terrain-type->color","~:file","src/four_nations/model/map/utils.cljs","~:line",133,"~:column",1,"~:end-line",133,"~:end-column",25,"~:meta",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",133,"^F",6,"^G",133,"^H",25],"~:tag","~$cljs.core/IMap"],"~$randomly-map-over-tiles",["^ ","~:protocol-inline",null,"^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",71,"^F",7,"^G",71,"^H",30,"~:arglists",["~#list",["~$quote",["^O",[["~$f","~$m","~$dimension"]]]]]],"^5","~$four-nations.model.map.utils/randomly-map-over-tiles","^D","src/four_nations/model/map/utils.cljs","^H",30,"~:method-params",["^O",[["~$f","~$m","^Q"]]],"~:protocol-impl",null,"~:arglists-meta",["^O",[null,null]],"^F",1,"~:variadic?",false,"^E",71,"~:ret-tag",["^4",[null,"~$clj","~$any"]],"^G",71,"~:max-fixed-arity",3,"~:fn-var",true,"^N",["^O",["^P",["^O",[["~$f","~$m","^Q"]]]]]],"~$point->neighbor-points*",["^ ","^M",null,"^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",27,"^F",7,"^G",27,"^H",30,"^N",["^O",["^P",["^O",[[["^ ","~:keys",["~$height","~$width"],"~:as","^Q"],["^ ","^11",["~$x","~$y"],"^14","~$point"]],[["^ ","^11",["^12","^13"],"^14","^Q"],["^ ","^11",["~$x","~$y"],"^14","^15"],"~$include-diagonal?"]]]]],"~:doc","Given a height, a width, and a (x, y) coordinate pair, returns all valid coordinates that are\n   neighbors. Valid coordinates are checked against the valid-coordinate? predicate","~:top-fn",["^ ","^V",false,"~:fixed-arity",3,"^Z",3,"^S",[[["^ ","^11",["^12","^13"],"^14","^Q"],["^ ","^11",["~$x","~$y"],"^14","^15"]],[["^ ","^11",["^12","^13"],"^14","^Q"],["^ ","^11",["~$x","~$y"],"^14","^15"],"^16"]],"^N",["^O",[[["^ ","^11",["^12","^13"],"^14","^Q"],["^ ","^11",["~$x","~$y"],"^14","^15"]],[["^ ","^11",["^12","^13"],"^14","^Q"],["^ ","^11",["~$x","~$y"],"^14","^15"],"^16"]]],"^U",["^O",[null,null]]]],"^5","~$four-nations.model.map.utils/point->neighbor-points*","^D","src/four_nations/model/map/utils.cljs","^H",30,"^18",["^ ","^V",false,"^19",3,"^Z",3,"^S",[[["^ ","^11",["^12","^13"],"^14","^Q"],["^ ","^11",["~$x","~$y"],"^14","^15"]],[["^ ","^11",["^12","^13"],"^14","^Q"],["^ ","^11",["~$x","~$y"],"^14","^15"],"^16"]],"^N",["^O",[[["^ ","^11",["^12","^13"],"^14","^Q"],["^ ","^11",["~$x","~$y"],"^14","^15"]],[["^ ","^11",["^12","^13"],"^14","^Q"],["^ ","^11",["~$x","~$y"],"^14","^15"],"^16"]]],"^U",["^O",[null,null]]],"^S",[[["^ ","^11",["^12","^13"],"^14","^Q"],["^ ","^11",["~$x","~$y"],"^14","^15"]],[["^ ","^11",["^12","^13"],"^14","^Q"],["^ ","^11",["~$x","~$y"],"^14","^15"],"^16"]],"^T",null,"^19",3,"^U",["^O",[null,null]],"^F",1,"^V",false,"~:methods",[["^ ","^19",2,"^V",false,"^J","^Y"],["^ ","^19",3,"^V",false,"^J",["^4",["^X","^Y","~$cljs.core/ISet","~$cljs.core/MetaFn","~$clj-nil"]]]],"^E",27,"^G",27,"^Z",3,"^[",true,"^N",["^O",[[["^ ","^11",["^12","^13"],"^14","^Q"],["^ ","^11",["~$x","~$y"],"^14","^15"]],[["^ ","^11",["^12","^13"],"^14","^Q"],["^ ","^11",["~$x","~$y"],"^14","^15"],"^16"]]],"^17","Given a height, a width, and a (x, y) coordinate pair, returns all valid coordinates that are\n   neighbors. Valid coordinates are checked against the valid-coordinate? predicate"],"~$no-neighbors-are?",["^ ","^M",null,"^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",114,"^F",7,"^G",114,"^H",24,"^N",["^O",["^P",["^O",[["~$pred","~$tile","~$m","~$dimensions"],["^1@","^1A","~$m","^1B","~$include-diagonals?"]]]]],"^17","Returns true if no neighbors of the tile satisfy the predicate.","^18",["^ ","^V",false,"^19",5,"^Z",5,"^S",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^1C"]],"^N",["^O",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^1C"]]],"^U",["^O",[null,null]]]],"^5","~$four-nations.model.map.utils/no-neighbors-are?","^D","src/four_nations/model/map/utils.cljs","^H",24,"^18",["^ ","^V",false,"^19",5,"^Z",5,"^S",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^1C"]],"^N",["^O",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^1C"]]],"^U",["^O",[null,null]]],"^S",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^1C"]],"^T",null,"^19",5,"^U",["^O",[null,null]],"^F",1,"^V",false,"^1;",[["^ ","^19",4,"^V",false,"^J","^Y"],["^ ","^19",5,"^V",false,"^J","~$boolean"]],"^E",114,"^G",114,"^Z",5,"^[",true,"^N",["^O",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^1C"]]],"^17","Returns true if no neighbors of the tile satisfy the predicate."],"~$map->string",["^ ","^M",null,"^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",151,"^F",7,"^G",151,"^H",18,"^N",["^O",["^P",["^O",[["~$m","^Q"]]]]],"^17","Given a game map, prints it out in a readable way."],"^5","~$four-nations.model.map.utils/map->string","^D","src/four_nations/model/map/utils.cljs","^H",18,"^S",["^O",[["~$m","^Q"]]],"^T",null,"^U",["^O",[null,null]],"^F",1,"^V",false,"^E",151,"^W","~$string","^G",151,"^Z",2,"^[",true,"^N",["^O",["^P",["^O",[["~$m","^Q"]]]]],"^17","Given a game map, prints it out in a readable way."],"~$has-terrain-type?",["^ ","^M",null,"^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",122,"^F",7,"^G",122,"^H",24,"^N",["^O",["^P",["^O",[["~$terrain-type","^1A"]]]]],"^17","Returns true if the tile has the specified terrain type."],"^5","~$four-nations.model.map.utils/has-terrain-type?","^D","src/four_nations/model/map/utils.cljs","^H",24,"^S",["^O",[["^1J","^1A"]]],"^T",null,"^U",["^O",[null,null]],"^F",1,"^V",false,"^E",122,"^W","^1E","^G",122,"^Z",2,"^[",true,"^N",["^O",["^P",["^O",[["^1J","^1A"]]]]],"^17","Returns true if the tile has the specified terrain type."],"~$map-over-neighbors",["^ ","^M",null,"^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",79,"^F",7,"^G",79,"^H",25,"^N",["^O",["^P",["^O",[["~$f","^1A","~$m","^1B"],["~$f","^1A","~$m","^1B","^1C"]]]]],"^17","Applies f to every neighbor of the tile.","^18",["^ ","^V",false,"^19",5,"^Z",5,"^S",[["~$f","^1A","~$m","^1B"],["~$f","^1A","~$m","^1B","^1C"]],"^N",["^O",[["~$f","^1A","~$m","^1B"],["~$f","^1A","~$m","^1B","^1C"]]],"^U",["^O",[null,null]]]],"^5","~$four-nations.model.map.utils/map-over-neighbors","^D","src/four_nations/model/map/utils.cljs","^H",25,"^18",["^ ","^V",false,"^19",5,"^Z",5,"^S",[["~$f","^1A","~$m","^1B"],["~$f","^1A","~$m","^1B","^1C"]],"^N",["^O",[["~$f","^1A","~$m","^1B"],["~$f","^1A","~$m","^1B","^1C"]]],"^U",["^O",[null,null]]],"^S",[["~$f","^1A","~$m","^1B"],["~$f","^1A","~$m","^1B","^1C"]],"^T",null,"^19",5,"^U",["^O",[null,null]],"^F",1,"^V",false,"^1;",[["^ ","^19",4,"^V",false,"^J","^Y"],["^ ","^19",5,"^V",false,"^J","~$cljs.core/LazySeq"]],"^E",79,"^G",79,"^Z",5,"^[",true,"^N",["^O",[["~$f","^1A","~$m","^1B"],["~$f","^1A","~$m","^1B","^1C"]]],"^17","Applies f to every neighbor of the tile."],"~$all-neighbors-are?",["^ ","^M",null,"^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",98,"^F",7,"^G",98,"^H",25,"^N",["^O",["^P",["^O",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^16"]]]]],"^17","Returns true if every neighbor of the tile satisfies the predicate.","^18",["^ ","^V",false,"^19",5,"^Z",5,"^S",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^16"]],"^N",["^O",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^16"]]],"^U",["^O",[null,null]]]],"^5","~$four-nations.model.map.utils/all-neighbors-are?","^D","src/four_nations/model/map/utils.cljs","^H",25,"^18",["^ ","^V",false,"^19",5,"^Z",5,"^S",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^16"]],"^N",["^O",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^16"]]],"^U",["^O",[null,null]]],"^S",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^16"]],"^T",null,"^19",5,"^U",["^O",[null,null]],"^F",1,"^V",false,"^1;",[["^ ","^19",4,"^V",false,"^J","^Y"],["^ ","^19",5,"^V",false,"^J","^1E"]],"^E",98,"^G",98,"^Z",5,"^[",true,"^N",["^O",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^16"]]],"^17","Returns true if every neighbor of the tile satisfies the predicate."],"~$map-over-tiles",["^ ","^M",null,"^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",65,"^F",7,"^G",65,"^H",21,"^N",["^O",["^P",["^O",[["~$f","~$m","^Q"]]]]]],"^5","~$four-nations.model.map.utils/map-over-tiles","^D","src/four_nations/model/map/utils.cljs","^H",21,"^S",["^O",[["~$f","~$m","^Q"]]],"^T",null,"^U",["^O",[null,null]],"^F",1,"^V",false,"^E",65,"^W",["^4",[null,"^X","^Y"]],"^G",65,"^Z",3,"^[",true,"^N",["^O",["^P",["^O",[["~$f","~$m","^Q"]]]]]],"~$tile->printable-char",["^ ","^M",null,"^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",144,"^F",7,"^G",144,"^H",27,"^N",["^O",["^P",["^O",[["^1A"]]]]]],"^5","~$four-nations.model.map.utils/tile->printable-char","^D","src/four_nations/model/map/utils.cljs","^H",27,"^S",["^O",[["^1A"]]],"^T",null,"^U",["^O",[null,null]],"^F",1,"^V",false,"^E",144,"^W",["^4",["^Y","^1H"]],"^G",144,"^Z",1,"^[",true,"^N",["^O",["^P",["^O",[["^1A"]]]]]],"~$some-neighbors-are?",["^ ","^M",null,"^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",106,"^F",7,"^G",106,"^H",26,"^N",["^O",["^P",["^O",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^1C"]]]]],"^17","Returns true if at least one neighbor of the tile satisfy the predicate.","^18",["^ ","^V",false,"^19",5,"^Z",5,"^S",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^1C"]],"^N",["^O",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^1C"]]],"^U",["^O",[null,null]]]],"^5","~$four-nations.model.map.utils/some-neighbors-are?","^D","src/four_nations/model/map/utils.cljs","^H",26,"^18",["^ ","^V",false,"^19",5,"^Z",5,"^S",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^1C"]],"^N",["^O",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^1C"]]],"^U",["^O",[null,null]]],"^S",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^1C"]],"^T",null,"^19",5,"^U",["^O",[null,null]],"^F",1,"^V",false,"^1;",[["^ ","^19",4,"^V",false,"^J","^Y"],["^ ","^19",5,"^V",false,"^J","^1E"]],"^E",106,"^G",106,"^Z",5,"^[",true,"^N",["^O",[["^1@","^1A","~$m","^1B"],["^1@","^1A","~$m","^1B","^1C"]]],"^17","Returns true if at least one neighbor of the tile satisfy the predicate."],"~$terrain-type->char",["^ ","^5","~$four-nations.model.map.utils/terrain-type->char","^D","src/four_nations/model/map/utils.cljs","^E",139,"^F",1,"^G",139,"^H",24,"^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",139,"^F",6,"^G",139,"^H",24],"^J","^K"],"~$random-point-in-dimensions",["^ ","^M",null,"^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",21,"^F",7,"^G",21,"^H",33,"^N",["^O",["^P",["^O",[["^1B"]]]]],"^17","Given some dimensions, returns a random point within those dimensions."],"^5","~$four-nations.model.map.utils/random-point-in-dimensions","^D","src/four_nations/model/map/utils.cljs","^H",33,"^S",["^O",[["^1B"]]],"^T",null,"^U",["^O",[null,null]],"^F",1,"^V",false,"^E",21,"^W","~$four-nations.general.types/Point","^G",21,"^Z",1,"^[",true,"^N",["^O",["^P",["^O",[["^1B"]]]]],"^17","Given some dimensions, returns a random point within those dimensions."],"~$point->neighbors",["^ ","^M",null,"^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",55,"^F",7,"^G",55,"^H",23,"^N",["^O",["^P",["^O",[["^Q","~$m","^15"],["^Q","~$m","^15","^16"]]]]],"^17","Given a height, a width, a map m, and a (x, y) coordinate pair, returns the values of all valid\n   neighbors, as defined by point->neighbor-coordinates.","^18",["^ ","^V",false,"^19",4,"^Z",4,"^S",[["^Q","~$m","^15"],["^Q","~$m","^15","^16"]],"^N",["^O",[["^Q","~$m","^15"],["^Q","~$m","^15","^16"]]],"^U",["^O",[null,null]]]],"^5","~$four-nations.model.map.utils/point->neighbors","^D","src/four_nations/model/map/utils.cljs","^H",23,"^18",["^ ","^V",false,"^19",4,"^Z",4,"^S",[["^Q","~$m","^15"],["^Q","~$m","^15","^16"]],"^N",["^O",[["^Q","~$m","^15"],["^Q","~$m","^15","^16"]]],"^U",["^O",[null,null]]],"^S",[["^Q","~$m","^15"],["^Q","~$m","^15","^16"]],"^T",null,"^19",4,"^U",["^O",[null,null]],"^F",1,"^V",false,"^1;",[["^ ","^19",3,"^V",false,"^J","^Y"],["^ ","^19",4,"^V",false,"^J","^1N"]],"^E",55,"^G",55,"^Z",4,"^[",true,"^N",["^O",[["^Q","~$m","^15"],["^Q","~$m","^15","^16"]]],"^17","Given a height, a width, a map m, and a (x, y) coordinate pair, returns the values of all valid\n   neighbors, as defined by point->neighbor-coordinates."],"~$randomly-map-over-neighbors",["^ ","^M",null,"^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",88,"^F",7,"^G",88,"^H",34,"^N",["^O",["^P",["^O",[["~$f","^1A","~$m","^1B"],["~$f","^1A","~$m","^1B","^1C"]]]]],"^17","Applies f to every neighbor of the tile in a random order.","^18",["^ ","^V",false,"^19",5,"^Z",5,"^S",[["~$f","^1A","~$m","^1B"],["~$f","^1A","~$m","^1B","^1C"]],"^N",["^O",[["~$f","^1A","~$m","^1B"],["~$f","^1A","~$m","^1B","^1C"]]],"^U",["^O",[null,null]]]],"^5","~$four-nations.model.map.utils/randomly-map-over-neighbors","^D","src/four_nations/model/map/utils.cljs","^H",34,"^18",["^ ","^V",false,"^19",5,"^Z",5,"^S",[["~$f","^1A","~$m","^1B"],["~$f","^1A","~$m","^1B","^1C"]],"^N",["^O",[["~$f","^1A","~$m","^1B"],["~$f","^1A","~$m","^1B","^1C"]]],"^U",["^O",[null,null]]],"^S",[["~$f","^1A","~$m","^1B"],["~$f","^1A","~$m","^1B","^1C"]],"^T",null,"^19",5,"^U",["^O",[null,null]],"^F",1,"^V",false,"^1;",[["^ ","^19",4,"^V",false,"^J","^1N"],["^ ","^19",5,"^V",false,"^J","^1N"]],"^E",88,"^G",88,"^Z",5,"^[",true,"^N",["^O",[["~$f","^1A","~$m","^1B"],["~$f","^1A","~$m","^1B","^1C"]]],"^17","Applies f to every neighbor of the tile in a random order."],"~$get-cell",["^ ","^M",null,"^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",9,"^F",7,"^G",9,"^H",15,"^N",["^O",["^P",["^O",[["~$m","~$p"],["~$m","~$x","~$y"]]]]],"^17","Given a 2 dimensional game map and an (x, y) coordinate pair, retrieves the value at the\n   specified cell. If an invalid x/y pair are passed in, this function will return nil.","^18",["^ ","^V",false,"^19",3,"^Z",3,"^S",[["~$m","~$p"],["~$m","~$x","~$y"]],"^N",["^O",[["~$m","~$p"],["~$m","~$x","~$y"]]],"^U",["^O",[null,null]]]],"^5","~$four-nations.model.map.utils/get-cell","^D","src/four_nations/model/map/utils.cljs","^H",15,"^18",["^ ","^V",false,"^19",3,"^Z",3,"^S",[["~$m","~$p"],["~$m","~$x","~$y"]],"^N",["^O",[["~$m","~$p"],["~$m","~$x","~$y"]]],"^U",["^O",[null,null]]],"^S",[["~$m","~$p"],["~$m","~$x","~$y"]],"^T",null,"^19",3,"^U",["^O",[null,null]],"^F",1,"^V",false,"^1;",[["^ ","^19",2,"^V",false,"^J",["^4",["^Y","^1>"]]],["^ ","^19",3,"^V",false,"^J",["^4",["^Y","^1>"]]]],"^E",9,"^G",9,"^Z",3,"^[",true,"^N",["^O",[["~$m","~$p"],["~$m","~$x","~$y"]]],"^17","Given a 2 dimensional game map and an (x, y) coordinate pair, retrieves the value at the\n   specified cell. If an invalid x/y pair are passed in, this function will return nil."],"~$point->neighbor-points",["^ ","^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",50,"^F",3,"^G",50,"^H",25,"^N",["^O",["^P",["^O",[["^Q","^15"],["^Q","^15","^16"]]]]]],"^5","~$four-nations.model.map.utils/point->neighbor-points","^D","src/four_nations/model/map/utils.cljs","^H",25,"^F",1,"^E",47,"^G",50,"^J","~$function","^N",["^O",["^P",["^O",[["^Q","^15"],["^Q","^15","^16"]]]]],"^17","Given a height, a width, and a (x, y) coordinate pair, returns all valid coordinates that are\n   neighbors. Valid coordinates are checked against the valid-coordinate? predicate"],"~$valid-coordinate?",["^ ","^M",null,"^I",["^ ","^D","/home/gizmo/workspace/four-nations/src/four_nations/model/map/utils.cljs","^E",15,"^F",7,"^G",15,"^H",24,"^N",["^O",["^P",["^O",[[["^ ","^11",["^12","^13"],"^14","^Q"],["^ ","^11",["~$x","~$y"],"^14","^15"]]]]]],"^17","A coordinate is valid if both components are non-negative integers and they are both less than\n   their respective bounds (y < height, x < width). Assumes zero-indexed coordinates."],"^5","~$four-nations.model.map.utils/valid-coordinate?","^D","src/four_nations/model/map/utils.cljs","^H",24,"^S",["^O",[["~$p__39560","~$p__39561"]]],"^T",null,"^U",["^O",[null,null]],"^F",1,"^V",false,"^E",15,"^W","^1E","^G",15,"^Z",2,"^[",true,"^N",["^O",["^P",["^O",[[["^ ","^11",["^12","^13"],"^14","^Q"],["^ ","^11",["~$x","~$y"],"^14","^15"]]]]]],"^17","A coordinate is valid if both components are non-negative integers and they are both less than\n   their respective bounds (y < height, x < width). Assumes zero-indexed coordinates."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:coast","~:y","~:terrain-type","~:symbol","~:width","~:resource","~:land","~:point","~:x","~:water","~:attributes","~:height"]],"~:order",["^2J","^2D","~:x","~:y","^2G","^2I","^2B","^2F","^2H","^2A","^2E","^2C"]],"^17",null]